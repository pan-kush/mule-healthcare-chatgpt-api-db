<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <flow name="mule-hcare-chatgpt-db-main">
        <http:listener config-ref="http-listener-config" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="0cc412e9-560b-45fa-954a-3b0451a75bf7" message="Inside API"/>
		<ee:transform doc:name="Set flow name and transactionId" doc:id="be78c694-768b-463e-b922-c600f6839682">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="flowName"><![CDATA[%dw 2.0
output application/java
---
flow.name]]></ee:set-variable>
                <ee:set-variable variableName="transactionId"><![CDATA[%dw 2.0
output application/java
---
correlationId]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <apikit:router config-ref="mule-hcare-chatgpt-db-config" />
        <error-handler ref="global-error-handler" />
    </flow>
    <flow name="post:\order-details:application\json:mule-hcare-chatgpt-db-config">
        <logger level="INFO" doc:name="Logger" doc:id="f1fc2ea4-6fac-402b-aacc-a5c79cde0a92" message="#[payload]" />
        <ee:transform doc:name="set initial payload and variables" doc:id="e8fe1f54-2299-4c04-a7fe-f75701073461">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="initialPayload"><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
                <ee:set-variable variableName="flowName"><![CDATA[%dw 2.0
output application/java
---
flow.name]]></ee:set-variable>
                <ee:set-variable resource="dw/initial-context.dwl" variableName="initialContext" />
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="set chatgpt payload" doc:id="5c653390-85e3-485b-87c2-a9da31a1d6b6">
            <ee:message>
                <ee:set-payload resource="dw/initial-request.dwl" />
            </ee:message>
        </ee:transform>
        <until-successful maxRetries="2" doc:name="Until Successful" doc:id="f71d5ded-e6aa-4f5e-9e90-7acebe2fd2c1" millisBetweenRetries="10000">
			<http:request method="POST" doc:name="Request to chatgpt api" doc:id="e6f039e6-d85d-4161-8430-e52c8a48f7d5" config-ref="http-request-configuration-chatgpt" url="https://api.openai.com/v1/chat/completions" target="initialResponse" responseTimeout="45000">
            <http:headers><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ Mule::p('secure::chatgpt.token')
}]]]></http:headers>
        </http:request>
		</until-successful>
        <ee:transform doc:name="fetch content from chatgpt initial response" doc:id="b78849f4-a62a-4fdd-a037-84489cf35730">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.initialResponse.choices[0].message.content]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <choice doc:name="Choice on payload if it contains order ids" doc:id="bbdc71fe-9e1e-434c-9a49-2dff39d3b18d">
            <when expression="#[upper(payload) contains &quot;[&quot;]">
                <logger level="INFO" doc:name="Logger" doc:id="cc9bda0d-e2a2-4fd5-a2de-79956e0519c0" message="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA; &quot;status&quot;: &quot;Initial response has order Ids&quot;,&#xA; &quot;payload&quot;: payload&#xA;}]" />
                <ee:transform doc:name="extract order ids from response" doc:id="ca042365-0e4e-4392-b682-b29a2df94a53">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable resource="dw/extract-order-ids.dwl" variableName="orderIds" />
                    </ee:variables>
                </ee:transform>
                <flow-ref doc:name="Flow Reference to select-from-database-flow" doc:id="44381c3b-3454-45ef-92de-781ae6581aa2" name="select-from-database-flow" />
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" doc:id="e76130a9-5b5e-43de-8759-dd2e6de64c0d" message="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA; &quot;status&quot;: &quot;Initial response does not contain order Ids&quot;,&#xA; &quot;payload&quot;: payload&#xA;}]" />
            </otherwise>
        </choice>
    </flow>
    <flow name="options:\order-details:mule-hcare-chatgpt-db-config">
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  methods: [
    "POST"
  ],
  headers: [
    "client_id", 
    "client_secret", 
    "Content-Type"
  ]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
